import dataikuapi

# Informations d'authentification
host = "https://YOUR_DATAIKU_INSTANCE_URL"
api_key = "YOUR_API_KEY"

# Se connecter à l'instance Dataiku
client = dataikuapi.DSSClient(host, api_key)

# Spécifier le projet et le dataset
project_key = "YOUR_PROJECT_KEY"
dataset_name = "test_prepared"

# Obtenir le dataset
project = client.get_project(project_key)
dataset = project.get_dataset(dataset_name)

# Charger les données actuelles du dataset dans un DataFrame
current_data = dataset.get_dataframe()

# Ajouter une nouvelle ligne au DataFrame
new_row = {
    "id": 3,
    "uid user": "user 777",
    "first name": "newuser",
    "last name": "newuser",
    "email": "newuser@gmail.com",
    "profile": "Reader"
}
current_data = current_data.append(new_row, ignore_index=True)

# Réécrire les données mises à jour dans le dataset
dataset.write_with_schema(current_data)








from fastapi import APIRouter
import dataikuapi

# Créer une instance du client Dataiku en utilisant l'hostname et la clé API
dataiku_hostname = "https://design-dataiku.dev.echonet/"
dataiku_api_key = "VOTRE_CLE_API_DATAIKU"
client = dataikuapi.DSSClient(dataiku_hostname, dataiku_api_key)

# Désactiver la vérification du certificat SSL
client._session.verify = False

# Créer un routeur FastAPI
router = APIRouter()

# Initialiser l'ID auto-incrémenté
id = 2

@router.post("/insert-into-dataset")
async def insert_into_dataset(user: UserBase):
    global id
    
    # Nom de votre projet et nom du dataset
    project_key = "API DATAIKU"
    dataset_name = "test"
    
    # Obtenir le dataset depuis Dataiku
    dataset = client.get_project(project_key).get_dataset(dataset_name)
    
    # Ajouter une nouvelle ligne avec les données de l'utilisateur
    new_row = {
        "id": id,
        "uid_user": user.uid_user,
        "first_name": user.first_name,
        "last_name": user.last_name,
        "email": user.email,
        "profile": user.profile
    }
    
    # Charger les données actuelles du dataset
    current_data = dataset.read_dataframe()
    
    # Ajouter la nouvelle ligne au DataFrame
    current_data = current_data.append(new_row, ignore_index=True)
    
    # Réécrire les données mises à jour dans le dataset
    dataset.write_with_schema(current_data)
    
    # Incrémenter l'ID auto-incrémenté
    id += 1
    
    return {"message": "Données insérées avec succès dans le dataset."}
